[{"E:\\dev\\node\\react-todolist\\src\\index.tsx":"1","E:\\dev\\node\\react-todolist\\src\\reportWebVitals.ts":"2","E:\\dev\\node\\react-todolist\\src\\App.tsx":"3","E:\\dev\\node\\react-todolist\\src\\components\\todolist\\Item.tsx":"4","E:\\dev\\node\\react-todolist\\src\\components\\todolist\\ToDoList.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":217,"mtime":1608956262106,"results":"9","hashOfConfig":"7"},{"size":741,"mtime":1608956155987,"results":"10","hashOfConfig":"7"},{"size":2488,"mtime":1608956463474,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l6cazr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\dev\\node\\react-todolist\\src\\index.tsx",[],"E:\\dev\\node\\react-todolist\\src\\reportWebVitals.ts",[],"E:\\dev\\node\\react-todolist\\src\\App.tsx",[],"E:\\dev\\node\\react-todolist\\src\\components\\todolist\\Item.tsx",["24"],"import React from 'react';\r\n\r\ninterface ItemProps {\r\n    id: Number,\r\n    name: String,\r\n    checked: boolean,\r\n    cbClick: (checked: boolean) => void;\r\n}\r\n\r\nexport class Item extends React.Component<ItemProps> {\r\n    constructor(props : ItemProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item\">\r\n                <input className=\"cb\" type=\"checkbox\" checked={this.props.checked} name={`done-item${this.props.id}`} id={`cb-item${this.props.id}`} onChange={e => {this.props.cbClick(e.target.checked)}}/>\r\n                <label htmlFor={`cb-item${this.props.id}`}>{!this.props.checked ? this.props.name : <del>{this.props.name}</del>}</label>\r\n            </div>\r\n        );\r\n    }\r\n}",["25","26"],"E:\\dev\\node\\react-todolist\\src\\components\\todolist\\ToDoList.tsx",["27","28","29"],{"ruleId":"30","severity":1,"message":"31","line":11,"column":5,"nodeType":"32","messageId":"33","endLine":13,"endColumn":6},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":10,"column":11,"nodeType":"40","messageId":"41","endLine":10,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":34,"column":32,"nodeType":"44","messageId":"45","endLine":34,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":55,"column":44,"nodeType":"48","messageId":"49","endLine":55,"endColumn":46},"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'State' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]